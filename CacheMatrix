## the goal is to create a square and invertible matrix object that can cache its inverse 
## to improve performance 

makeCacheMatrix <- function(x = numeric()) {
## defines and caches the  matrix x and the functions available to get, set the matrix and its inverse
        inv <- NULL
        set <- function(y) {
               if(!is.matrix(y)) stop(" input must be a matrix ")
                x <<- y
                inv<<-NULL
        }
        get <- function() x
        setinv <- function(invm) inv <<- invm
        getinv <- function() inv
        list(set = set, get = get,
             setinv = setinv,
             getinv = getinv)
}

cacheSolve <- function(x, ...) {
## computes the inverse of matrix cached by makeCacheMatrix it not already cached
        inv <- x$getinv()
        if(!is.null(inv)) {
                message("getting cached matrix result")
                return(inv)
        }
        data <- x$get()
        invm <- solve(data, ...)
        x$setinv(invm)
        invm
}
